[{"/Users/tavallai/codes/JS/didartshop-dashboard/src/index.js":"1","/Users/tavallai/codes/JS/didartshop-dashboard/src/App.js":"2","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/DashboardRoutes.js":"3","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/PrivateAdminRoute.js":"4","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/PublicAdminRoute.js":"5","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/login/DashboardLogin.js":"6","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductsSection.js":"7","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/WebsiteManagement.js":"8","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Discount.js":"9","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrdersDetail.js":"10","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignSection.js":"11","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Category/CategorySection.js":"12","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentsSection.js":"13","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/login/Style.js":"14","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrdersSection.js":"15","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Fiance/FianceSection.js":"16","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentsList.js":"17","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/DashboardLayout.js":"18","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Product.js":"19","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Account/Account.js":"20","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/ToFaDigit.js":"21","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Attributes.js":"22","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/SocialNetwork.js":"23","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Sliders.js":"24","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/useSettingData.js":"25","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/DateFormat.js":"26","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Account/Style.js":"27","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/GetProductData.js":"28","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/EditImage.js":"29","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/convertProductData.js":"30","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useAxios.js":"31","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/Link/ItemLink.js":"32","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductSectionStyle.js":"33","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ShowProductStyle.js":"34","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/WebsiteManagmentStyle.js":"35","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/DiscountStyle.js":"36","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Components/TablePaginationActions.js":"37","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Styles/StyledTableRow.js":"38","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Styles/StyledTableCell.js":"39","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductCampaign.js":"40","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductTag.js":"41","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductCategory.js":"42","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductStock.js":"43","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/AddImage.js":"44","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductInfo.js":"45","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/DashboardMenu.js":"46","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/Styles/LayoutStyle.js":"47","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/AttributesStyle.js":"48","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/SocialNetworkStyle.js":"49","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/SlidersStyle.js":"50","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useForceUpdate.js":"51","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ImagesStyle.js":"52","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/AddImageDialog.js":"53","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/Link/ListItemLink.js":"54","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductStockStyle.js":"55","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductInfoStyle.js":"56","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/Styles/MenuStyle.js":"57","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentCard.js":"58","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Fiance/Style.js":"59","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Category/AddCategoryDialog.js":"60","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/CampaignSectionStyle.js":"61","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/useCampaignsData.js":"62","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignDiscount.js":"63","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignAmazing.js":"64","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignBanners.js":"65","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CartCost.js":"66","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/ProductDetail.js":"67","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CartDetail.js":"68","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CustomerInfo.js":"69","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrderState.js":"70","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/AmazingStyle.js":"71","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/BannersStyle.js":"72","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/DiscountTableStyle.js":"73","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Auth.js":"74","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useAllCommentsData.js":"75","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Public/DeleteDialog.js":"76","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useDeleteComment.js":"77","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useCategoriesData.js":"78","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useChangeCommentStatus.js":"79","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Styles/useCommentCardStyle.js":"80","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useLogin.js":"81"},{"size":502,"mtime":1609791084256,"results":"82","hashOfConfig":"83"},{"size":1633,"mtime":1609799865150,"results":"84","hashOfConfig":"83"},{"size":3054,"mtime":1609799865156,"results":"85","hashOfConfig":"83"},{"size":666,"mtime":1609799865156,"results":"86","hashOfConfig":"83"},{"size":524,"mtime":1609799865156,"results":"87","hashOfConfig":"83"},{"size":5217,"mtime":1609799865155,"results":"88","hashOfConfig":"83"},{"size":20633,"mtime":1609799970535,"results":"89","hashOfConfig":"83"},{"size":5110,"mtime":1609791083397,"results":"90","hashOfConfig":"83"},{"size":9868,"mtime":1609799865151,"results":"91","hashOfConfig":"83"},{"size":2521,"mtime":1609799865153,"results":"92","hashOfConfig":"83"},{"size":3688,"mtime":1609799865151,"results":"93","hashOfConfig":"83"},{"size":16005,"mtime":1609799865152,"results":"94","hashOfConfig":"83"},{"size":4627,"mtime":1609799970535,"results":"95","hashOfConfig":"83"},{"size":1438,"mtime":1609791083401,"results":"96","hashOfConfig":"83"},{"size":10256,"mtime":1609799865154,"results":"97","hashOfConfig":"83"},{"size":12107,"mtime":1609842845525,"results":"98","hashOfConfig":"83"},{"size":2320,"mtime":1609799970534,"results":"99","hashOfConfig":"83"},{"size":3343,"mtime":1609799865155,"results":"100","hashOfConfig":"83"},{"size":15192,"mtime":1609799865154,"results":"101","hashOfConfig":"83"},{"size":6482,"mtime":1609791083391,"results":"102","hashOfConfig":"83"},{"size":936,"mtime":1609799865156,"results":"103","hashOfConfig":"83"},{"size":6577,"mtime":1609791083396,"results":"104","hashOfConfig":"83"},{"size":2505,"mtime":1609791083396,"results":"105","hashOfConfig":"83"},{"size":4466,"mtime":1609791083396,"results":"106","hashOfConfig":"83"},{"size":1471,"mtime":1609791083397,"results":"107","hashOfConfig":"83"},{"size":541,"mtime":1609799865151,"results":"108","hashOfConfig":"83"},{"size":933,"mtime":1609799865150,"results":"109","hashOfConfig":"83"},{"size":3125,"mtime":1609791083399,"results":"110","hashOfConfig":"83"},{"size":10232,"mtime":1609791083399,"results":"111","hashOfConfig":"83"},{"size":1312,"mtime":1609799865155,"results":"112","hashOfConfig":"83"},{"size":264,"mtime":1609791084257,"results":"113","hashOfConfig":"83"},{"size":712,"mtime":1609799865156,"results":"114","hashOfConfig":"83"},{"size":991,"mtime":1609799865155,"results":"115","hashOfConfig":"83"},{"size":1105,"mtime":1609799865155,"results":"116","hashOfConfig":"83"},{"size":1097,"mtime":1609799865153,"results":"117","hashOfConfig":"83"},{"size":982,"mtime":1609799865151,"results":"118","hashOfConfig":"83"},{"size":4402,"mtime":1609949624218,"results":"119","hashOfConfig":"83"},{"size":293,"mtime":1609791083401,"results":"120","hashOfConfig":"83"},{"size":443,"mtime":1609791083401,"results":"121","hashOfConfig":"83"},{"size":3038,"mtime":1609799865154,"results":"122","hashOfConfig":"83"},{"size":3105,"mtime":1609799865154,"results":"123","hashOfConfig":"83"},{"size":2845,"mtime":1609799865154,"results":"124","hashOfConfig":"83"},{"size":8648,"mtime":1609791083400,"results":"125","hashOfConfig":"83"},{"size":8965,"mtime":1609791083399,"results":"126","hashOfConfig":"83"},{"size":11447,"mtime":1609791083400,"results":"127","hashOfConfig":"83"},{"size":5393,"mtime":1609950797585,"results":"128","hashOfConfig":"83"},{"size":2347,"mtime":1609791083402,"results":"129","hashOfConfig":"83"},{"size":1134,"mtime":1609799865153,"results":"130","hashOfConfig":"83"},{"size":507,"mtime":1609799865153,"results":"131","hashOfConfig":"83"},{"size":1079,"mtime":1609799865153,"results":"132","hashOfConfig":"83"},{"size":213,"mtime":1609791084257,"results":"133","hashOfConfig":"83"},{"size":2180,"mtime":1609799865155,"results":"134","hashOfConfig":"83"},{"size":2212,"mtime":1609791083399,"results":"135","hashOfConfig":"83"},{"size":17085,"mtime":1609950100669,"results":"136","hashOfConfig":"83"},{"size":2084,"mtime":1609799865155,"results":"137","hashOfConfig":"83"},{"size":1061,"mtime":1609799865155,"results":"138","hashOfConfig":"83"},{"size":344,"mtime":1609791083402,"results":"139","hashOfConfig":"83"},{"size":11740,"mtime":1609799970534,"results":"140","hashOfConfig":"83"},{"size":1835,"mtime":1609842845530,"results":"141","hashOfConfig":"83"},{"size":3826,"mtime":1609799865151,"results":"142","hashOfConfig":"83"},{"size":870,"mtime":1609799865151,"results":"143","hashOfConfig":"83"},{"size":1706,"mtime":1609799865151,"results":"144","hashOfConfig":"83"},{"size":12280,"mtime":1609799865150,"results":"145","hashOfConfig":"83"},{"size":9451,"mtime":1609799865150,"results":"146","hashOfConfig":"83"},{"size":7671,"mtime":1609799865150,"results":"147","hashOfConfig":"83"},{"size":2802,"mtime":1609799865153,"results":"148","hashOfConfig":"83"},{"size":5092,"mtime":1609799865154,"results":"149","hashOfConfig":"83"},{"size":1576,"mtime":1609799865153,"results":"150","hashOfConfig":"83"},{"size":3668,"mtime":1609799865153,"results":"151","hashOfConfig":"83"},{"size":3002,"mtime":1609799865153,"results":"152","hashOfConfig":"83"},{"size":2043,"mtime":1609799865151,"results":"153","hashOfConfig":"83"},{"size":1382,"mtime":1609799865151,"results":"154","hashOfConfig":"83"},{"size":834,"mtime":1609799865151,"results":"155","hashOfConfig":"83"},{"size":569,"mtime":1609799865156,"results":"156","hashOfConfig":"83"},{"size":1129,"mtime":1609800213176,"results":"157","hashOfConfig":"83"},{"size":3026,"mtime":1609799865155,"results":"158","hashOfConfig":"83"},{"size":951,"mtime":1609799865152,"results":"159","hashOfConfig":"83"},{"size":786,"mtime":1609799865156,"results":"160","hashOfConfig":"83"},{"size":1082,"mtime":1609799865152,"results":"161","hashOfConfig":"83"},{"size":2129,"mtime":1609799970535,"results":"162","hashOfConfig":"83"},{"size":931,"mtime":1609799865156,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"uf7obc",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"166"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"166"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"166"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"166"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"166"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"166"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"166"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"166"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"166"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"166"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"166"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"166"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"166"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"166"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"166"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"/Users/tavallai/codes/JS/didartshop-dashboard/src/index.js",[],["344","345"],"/Users/tavallai/codes/JS/didartshop-dashboard/src/App.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/DashboardRoutes.js",["346","347"],"import React from \"react\";\nimport {Redirect, Switch} from 'react-router-dom';\n\n\nimport OrdersSection from \"../DashboardComponents/Orders/OrdersSection\";\nimport OrdersDetail from \"../DashboardComponents/Orders/OrdersDetail\";\nimport ProductsSection from \"../DashboardComponents/Products/ProductsSection\";\nimport Product from \"../DashboardComponents/Products/Product\";\nimport WebsiteManagement from \"../DashboardComponents/Management/WebsiteManagement\";\nimport CategorySection from \"../DashboardComponents/Category/CategorySection\";\nimport CampaignSection from \"../DashboardComponents/Campaign/CampaignSection\";\nimport FianceSection from \"../DashboardComponents/Fiance/FianceSection\";\nimport CommentsSection from \"../DashboardComponents/Comments/CommentsSection\";\nimport Discount from \"../DashboardComponents/Campaign/Discount\";\nimport CommentsList from \"../DashboardComponents/Comments/CommentsList\";\nimport Account from \"../DashboardComponents/Account/Account\";\nimport DashboardLayout from \"../DashboardForms/DashboardLayout\";\n\n\nfunction DashboardRoutes(props) {\n    const path = props.section.pathname\n    let found = true\n    let orderCode\n\n    const setSection = () => {\n        if (path.includes('DID'))\n            orderCode = path.replaceAll('/admin/dashboard/orders/', '')\n\n        switch (path) {\n            case '/admin/dashboard':\n                return <DashboardLayout/>\n            case '/admin/dashboard/orders' :\n                return <OrdersSection/>\n\n            case `/admin/dashboard/orders/${orderCode}`:\n                return <OrdersDetail code={orderCode}/>\n\n            case '/admin/dashboard/products' :\n                return <ProductsSection/>\n\n            case '/admin/dashboard/products/add' :\n                return <Product edit={false}/>\n\n            case '/admin/dashboard/product':\n                return <Product edit={true}/>\n\n            case '/admin/dashboard/management':\n                return <WebsiteManagement/>\n\n            case '/admin/dashboard/campaigns':\n                return <CampaignSection/>\n\n            case '/admin/dashboard/campaigns/add':\n                return <Discount edit={false}/>\n\n            case `/admin/dashboard/campaigns/discount`:\n                return <Discount edit={true}/>\n\n            case '/admin/dashboard/categories':\n                return <CategorySection/>\n\n            case '/admin/dashboard/comments': {\n                return <CommentsSection/>\n            }\n            case '/admin/dashboard/comments/show': {\n                return <CommentsList/>\n            }\n\n            case '/admin/dashboard/fiance': {\n                return <FianceSection/>\n            }\n\n            case '/admin/dashboard/account': {\n                return <Account/>\n            }\n\n            default:\n                return found = false\n        }\n    }\n\n    return (\n        <>\n            <Switch>\n                {setSection()}\n            </Switch>\n            {\n                !found ? <Redirect to=\"/\"/> : null\n            }\n\n        </>\n    )\n}\n\nexport default DashboardRoutes","/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/PrivateAdminRoute.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/PublicAdminRoute.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/login/DashboardLogin.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductsSection.js",["348"],"import React, {useEffect, useState} from \"react\";\nimport {Button, IconButton, Link, Paper, SvgIcon, TableBody, TableContainer, Typography} from \"@material-ui/core\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport {StyledTableCell} from \"../Table/Styles/StyledTableCell\";\nimport {StyledTableRow} from \"../Table/Styles/StyledTableRow\";\nimport TablePaginationActions from \"../Table/Components/TablePaginationActions\";\nimport {useAxios} from '../../utills/Hooks/useAxios'\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport {useStyles} from \"./Styles/ProductSectionStyle\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport moment from 'jalali-moment'\nimport DeleteDialog from \"../Public/DeleteDialog\";\n\n\nfunction ProductsSection() {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0)\n    const [deleteDialog, setDeleteDialog] = useState({\n        open: false,\n        id: null,\n    })\n    const [{data, loading}, fetch] = useAxios(\n        `admin/merchandise_mng/get_all_merchandise?page=${page}`);\n\n    const [{data: excelLink, loading: exportLoading}, exportExcel] = useAxios(\n        {\n            url: `admin/merchandise_mng/export_exel`,\n        }\n    );\n\n    const [, executeDelete] = useAxios(\n        {\n            url: `/admin/merchandise_mng/delete_merchandise`,\n            method: \"DELETE\",\n        },\n        {manual: true}\n    );\n    useEffect(() => {\n        fetch()\n        exportExcel()\n    }, [])\n\n    let numPages = 0\n\n    if (data !== undefined)\n        numPages = data.data.pages + 1\n\n    const handleChangePages = (pageNumber) => {\n        setPage(pageNumber)\n    }\n\n\n    const deleteHandler = () => {\n        executeDelete({\n            data: {\n                \"id\": `${deleteDialog.id}`\n            }\n        })\n            .then(() => {\n                fetch()\n                setDeleteDialog({\n                    open: false,\n                    id: null,\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    const onCloseDialog = () => {\n        setDeleteDialog({\n            ...deleteDialog,\n            open: false,\n        })\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            {\n                loading || exportLoading\n                    ? <div style={{height: 1000, position: 'relative'}}>\n                        <Skeleton style={{position: 'absolute', top: '-22%'}} animation=\"pulse\" height={1000} width=\"100%\">\n                            <TableContainer component={Paper}/>\n                        </Skeleton>\n                    </div>\n                    :\n                    <TableContainer component={Paper}>\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                            <Typography className={classes.title} component={\"span\"}>محصولات</Typography>\n                            <div>\n                                <ItemLink to={'/admin/dashboard/products/add'}>\n                                    <Button\n                                        dir={'ltr'}\n                                        className={classes.addProduct}\n                                        variant={\"contained\"}\n                                        endIcon={<AddCircleOutlineIcon/>}\n                                    >\n                                        اضافه کردن محصول جدید\n                                    </Button>\n                                </ItemLink>\n                                <Link\n                                    href={`${!exportLoading && excelLink.data.file_dir}`}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    <IconButton className={classes.export}\n                                                aria-label={\"export\"}>\n                                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\"\n                                                 viewBox=\"0 0 17 17\">\n                                            <g id=\"common-file-text-download\" transform=\"translate(-0.25 -0.25)\">\n                                                <circle id=\"Ellipse_128\" data-name=\"Ellipse 128\" cx=\"4.267\" cy=\"4.267\"\n                                                        r=\"4.267\"\n                                                        transform=\"translate(8.217 8.217)\" fill=\"none\" stroke=\"#f16522\"\n                                                        strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30125\" data-name=\"Path 30125\" d=\"M17.25,14.25v4.267\"\n                                                      transform=\"translate(-4.767 -3.9)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30126\" data-name=\"Path 30126\" d=\"M16.6,19.6,15,18\"\n                                                      transform=\"translate(-4.117 -4.983)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30127\" data-name=\"Path 30127\" d=\"M17.25,19.6l1.6-1.6\"\n                                                      transform=\"translate(-4.767 -4.983)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30128\" data-name=\"Path 30128\" d=\"M3.75,6.75h7.467\"\n                                                      transform=\"translate(-0.867 -1.733)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30129\" data-name=\"Path 30129\" d=\"M3.75,11.25H8.017\"\n                                                      transform=\"translate(-0.867 -3.033)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30130\" data-name=\"Path 30130\" d=\"M3.75,15.75H6.417\"\n                                                      transform=\"translate(-0.867 -4.333)\" fill=\"none\" stroke=\"#f16522\"\n                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>\n                                                <path id=\"Path_30131\" data-name=\"Path 30131\"\n                                                      d=\"M5.55,14.617H1.817A1.067,1.067,0,0,1,.75,13.55V1.817A1.067,1.067,0,0,1,1.817.75H9.375a1.067,1.067,0,0,1,.754.312L12.171,3.1a1.067,1.067,0,0,1,.312.754V5.55\"\n                                                      fill=\"none\" stroke=\"#f16522\" strokeLinecap=\"round\"\n                                                      strokeLinejoin=\"round\"\n                                                      strokeWidth=\"1\"/>\n                                            </g>\n                                        </SvgIcon>\n                                        <Typography\n                                            style={{\n                                                color: '#F16522',\n                                                fontSize: '14px',\n                                                fontFamily: 'Shabnam',\n                                                fontWeight: \"bold\",\n                                                margin: '8px 8px'\n                                            }}\n                                            component={'span'}\n                                        >اکسپورت\n                                        </Typography>\n                                    </IconButton>\n                                </Link>\n                            </div>\n                        </div>\n\n                        {\n                            data.data.merchandises.length > 0 ?\n                                <Table className={classes.table} aria-label=\"products\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <StyledTableCell align=\"right\">کد محصول</StyledTableCell>\n                                            <StyledTableCell align=\"right\">نام محصول</StyledTableCell>\n                                            <StyledTableCell align=\"right\">حداکثر فروش</StyledTableCell>\n                                            <StyledTableCell align=\"right\">تعداد موجود</StyledTableCell>\n                                            <StyledTableCell align=\"right\">تاریخ ثبت محصول</StyledTableCell>\n                                            <StyledTableCell align=\"right\">نوع محصول</StyledTableCell>\n                                            <StyledTableCell align=\"right\"/>\n                                            <StyledTableCell align=\"right\"/>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            data.data.merchandises.map((row) => (\n                                                <StyledTableRow key={row.id}>\n                                                    <StyledTableCell align=\"right\" component=\"th\" scope=\"row\">\n                                                        {row.unique_code}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        {row.title}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        {toFaDigit(row.order_counter.toString())}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        {toFaDigit(row.stock_number.toString())}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        {toFaDigit(moment.unix(row.create_date).locale('fa').format(\"jYYYY/jM/jD\"))}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        {row.merchandise_type === \"1\" ? \"آماده در انبار\" : \"پس از سفارش\"}\n                                                    </StyledTableCell>\n\n                                                    <StyledTableCell align=\"right\">\n                                                        <ItemLink text={'ویرایش'} to={{\n                                                            pathname: `/admin/dashboard/product`,\n                                                            search: `?id=${row.id}&code=${row.unique_code}`,\n                                                            state: row\n                                                        }}>\n                                                            <IconButton>\n\n                                                                <SvgIcon xmlns=\"http://www.w3.org/2000/svg\"\n                                                                         width=\"17.648\"\n                                                                         height=\"17.5\"\n                                                                         viewBox=\"0 0 17.648 17.5\">\n                                                                    <g id=\"edit\" transform=\"translate(-1.25 -1.129)\">\n                                                                        <path id=\"Path_2582\" data-name=\"Path 2582\"\n                                                                              d=\"M9.157,4H3.59A1.59,1.59,0,0,0,2,5.59V16.723a1.59,1.59,0,0,0,1.59,1.59H14.723a1.59,1.59,0,0,0,1.59-1.59V11.157\"\n                                                                              transform=\"translate(0 -0.434)\"\n                                                                              fill=\"none\"\n                                                                              stroke=\"#434343\" strokeLinecap=\"round\"\n                                                                              strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                                                                        <path id=\"Path_2583\" data-name=\"Path 2583\"\n                                                                              d=\"M16.349,2.373a1.687,1.687,0,0,1,2.386,2.386l-7.554,7.554L8,13.108l.8-3.181Z\"\n                                                                              transform=\"translate(-1.229)\" fill=\"none\"\n                                                                              stroke=\"#434343\"\n                                                                              strokeLinecap=\"round\"\n                                                                              strokeLinejoin=\"round\"\n                                                                              strokeWidth=\"1.5\"/>\n                                                                    </g>\n                                                                </SvgIcon>\n\n                                                                <Typography\n                                                                    style={{\n                                                                        color: '#434343',\n                                                                        fontSize: '14px',\n                                                                        fontFamily: 'Shabnam',\n                                                                        margin: '8px 8px'\n                                                                    }}\n                                                                    component={'span'}\n                                                                >ویرایش\n                                                                </Typography>\n\n                                                            </IconButton>\n\n                                                        </ItemLink>\n                                                    </StyledTableCell>\n                                                    <StyledTableCell align=\"right\">\n                                                        <IconButton onClick={() => {\n                                                            setDeleteDialog({\n                                                                open: true,\n                                                                id: row.id,\n                                                            })\n                                                        }}>\n\n                                                            <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"15.9\"\n                                                                     height=\"17.5\"\n                                                                     viewBox=\"0 0 15.9 17.5\">\n                                                                <g id=\"trash-2\" transform=\"translate(-2.25 -1.25)\">\n                                                                    <path id=\"Path_2584\" data-name=\"Path 2584\"\n                                                                          d=\"M3,6H17.4\"\n                                                                          transform=\"translate(0 -0.8)\" fill=\"none\"\n                                                                          stroke=\"#f16522\"\n                                                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                          strokeWidth=\"1.5\"/>\n                                                                    <path id=\"Path_2585\" data-name=\"Path 2585\"\n                                                                          d=\"M16.2,5.2V16.4A1.6,1.6,0,0,1,14.6,18h-8A1.6,1.6,0,0,1,5,16.4V5.2m2.4,0V3.6A1.6,1.6,0,0,1,9,2h3.2a1.6,1.6,0,0,1,1.6,1.6V5.2\"\n                                                                          transform=\"translate(-0.4)\" fill=\"none\"\n                                                                          stroke=\"#f16522\"\n                                                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                          strokeWidth=\"1.5\"/>\n                                                                    <line id=\"Line_26\" data-name=\"Line 26\" y2=\"4.8\"\n                                                                          transform=\"translate(8.6 9.2)\" fill=\"none\"\n                                                                          stroke=\"#f16522\"\n                                                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                          strokeWidth=\"1.5\"/>\n                                                                    <line id=\"Line_27\" data-name=\"Line 27\" y2=\"4.8\"\n                                                                          transform=\"translate(11.8 9.2)\" fill=\"none\"\n                                                                          stroke=\"#f16522\"\n                                                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                          strokeWidth=\"1.5\"/>\n                                                                </g>\n                                                            </SvgIcon>\n\n                                                            <Typography\n                                                                style={{\n                                                                    color: '#F16522',\n                                                                    fontSize: '14px',\n                                                                    fontFamily: 'Shabnam',\n                                                                    margin: '8px 8px'\n                                                                }}\n                                                                component={'span'}\n                                                            >حذف\n                                                            </Typography>\n\n                                                        </IconButton>\n                                                    </StyledTableCell>\n                                                </StyledTableRow>\n                                            ))}\n\n                                    </TableBody>\n                                </Table> : null\n                        }\n\n                    </TableContainer>\n            }\n\n            {\n                loading\n                    ? null\n                    : data.data.merchandises.length > 0\n                    ? <TablePaginationActions numPages={numPages} page={page} onChange={handleChangePages}/>\n                    : null\n            }\n            <DeleteDialog\n                onClose={onCloseDialog}\n                open={deleteDialog.open}\n                title={'حذف محصول'}\n                deleteHandler={deleteHandler}\n            />\n\n        </div>\n    )\n\n}\n\nexport default ProductsSection","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/WebsiteManagement.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Discount.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrdersDetail.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignSection.js",["349"],"import React, {useEffect, useState} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport CampaignBanners from \"./CampaignBanners\";\nimport CampaignAmazing from \"./CampaignAmazing\";\nimport CampaignDiscount from \"./CampaignDiscount\";\nimport useCampaignsData from \"./useCampaignsData\";\nimport {useStyles} from \"./Styles/CampaignSectionStyle\";\nimport {Skeleton} from \"@material-ui/lab\"\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\n\nfunction CampaignSection() {\n    const classes = useStyles();\n    const [fetch, setFetch] = useState(true)\n    const [result, loading] = useCampaignsData(fetch)\n    const [saveLoading, setSaveLoading] = useState(false)\n    const [, updateData] = useAxios({\n        url: '/admin/campaign_mng/update',\n        method: 'PATCH',\n    }, {manual: true})\n\n    /** start of states **/\n    const [campaigns, setCampaigns] = useState([])\n    const [amazingOffer, setAmazingOffer] = useState()\n    const [amazingOfferCover, setAmazingOfferCover] = useState('')\n    /** end of states **/\n\n    useEffect(() => {\n        setCampaigns(result[0])\n        setAmazingOffer(result[1])\n        setAmazingOfferCover(result[2])\n        setFetch(false)\n    }, [result])\n\n    const handleSubmit = async () => {\n        setSaveLoading(true)\n        for (let i = 0; i < campaigns.length; i++) {\n            try {\n                await updateData({\n                    data: {\n                        \"id\": parseInt(campaigns[i].id),\n                        \"percent_of_discount\": campaigns[i].percent_of_discount / 100,\n                    }\n                })\n\n            } catch (err) {\n                console.log(err.response)\n            }\n        }\n        setFetch(true)\n        setSaveLoading(false)\n\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    {\n                        loading\n                            ? <Skeleton width={'100%'} height={500} variant={\"rect\"}/>\n                            : <CampaignBanners\n                                campaigns={campaigns}\n                                setCampaigns={setCampaigns}\n                            />\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    {loading\n                        ? <Skeleton width={'100%'} height={500} variant={\"rect\"}/>\n                        : <CampaignAmazing\n                            cover={amazingOfferCover}\n                            setCover={setAmazingOfferCover}\n                            amazingOffer={amazingOffer}\n                            setAmazingOffer={setAmazingOffer}\n                        />\n                    }\n                </Grid>\n                <Grid item xs={12}>\n\n                    {loading\n                        ? <Skeleton width={'100%'} height={500} variant={\"rect\"}/>\n                        : <CampaignDiscount/>\n                    }\n                </Grid>\n                <Grid item xs={false} sm={6} md={9}/>\n                <Grid style={{position: 'relative'}} item xs={12} sm={6} md={3}>\n                    {\n                        !loading &&\n                        <Button disabled={saveLoading} onClick={handleSubmit} fullWidth className={classes.save}\n                                variant={\"contained\"}>ثبت\n                            اطلاعات</Button>\n                    }\n\n                    {saveLoading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n\n}\n\n\nexport default CampaignSection","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Category/CategorySection.js",["350","351","352"],"import React, {useEffect, useState} from \"react\";\nimport {Button, IconButton, Paper, SvgIcon, TableBody, TableContainer, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AddCategoryDialog from \"./AddCategoryDialog\";\nimport TablePaginationActions from \"../Table/Components/TablePaginationActions\";\nimport {StyledTableCell} from \"../Table/Styles/StyledTableCell\";\nimport {StyledTableRow} from \"../Table/Styles/StyledTableRow\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {toFaDigit} from \"../../utills/ToFaDigit\";\nimport {Skeleton} from \"@material-ui/lab\"\nimport moment from \"jalali-moment\";\nimport DeleteDialog from \"../Public/DeleteDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: '100%',\n    },\n    paper: {\n        paddingTop: theme.spacing(0)\n    },\n    title: {\n        fontFamily: 'Shabnam',\n        color: '#434343',\n        fontSize: 20,\n        fontWeight: \"bold\",\n        margin: theme.spacing(3, 3),\n        float: \"right\"\n    },\n    export: {\n        margin: theme.spacing(1, 3, 3),\n        float: \"left\"\n    },\n    addProduct: {\n        margin: theme.spacing(2, 3),\n        float: \"left\",\n        backgroundColor: '#F16522',\n        color: 'white',\n        fontSize: '16px',\n        fontFamily: 'Shabnam',\n        fontWeight: \"bold\",\n        '&:hover': {\n            backgroundColor: '#F16522',\n            opacity: '70%'\n        },\n    },\n    pageButton: {\n\n        color: 'white',\n        fontSize: '16px',\n        fontFamily: 'Shabnam',\n        fontWeight: \"bold\",\n        height: 40,\n        width: 40,\n        borderRadius: 7,\n        marginLeft: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: '#F16522',\n            opacity: '70%'\n        },\n    },\n    buttonGroup: {\n        margin: theme.spacing(4, 3, 10, 0),\n        float: \"left\"\n    },\n    loading: {\n        color: '#F16522',\n        direction: 'rtl',\n        position: 'absolute',\n        top: '81px',\n        right: 'auto',\n        width: '82.5%',\n    },\n}), {index: 1});\n\n\nfunction createData(id, name, create_date) {\n    return {id, name, create_date};\n}\n\n\nfunction CategorySection() {\n    const classes = useStyles();\n    const [page, setPage] = useState(0)\n    const [{response, loading}, getCategories] = useAxios(\n        {\n            url: `/admin/category_mng/get_category?page=${page}`\n        }\n    )\n    const [{loading: postLoading}, postCategory] = useAxios(\n        {\n            url: `/admin/category_mng/create_category`,\n            method: 'POST'\n        },\n        {manual: true}\n    )\n    const [{loading: pathLoading}, updateCategory] = useAxios(\n        {\n            url: `/admin/category_mng/update_category`,\n            method: 'PATCH'\n        },\n        {manual: true}\n    )\n    const [{loading: deleteLoading}, deleteCategory] = useAxios(\n        {\n            url: `/admin/category_mng/delete_category`,\n            method: 'DELETE'\n        },\n        {manual: true}\n    )\n\n    const [selectedCategory, setSelectedCategory] = useState(createData('', '', ''))\n\n\n    const [openAddDialog, setOpenAddDialog] = useState(false)\n    const [openEditDialog, setOpenEditDialog] = useState(false)\n    const [deleteDialog, setDeleteDialog] = useState({\n        open: false,\n        id: null,\n    })\n\n    let numPages = 0\n    if (response !== undefined)\n        numPages = parseInt(((response.data.data.pages)).toString()) + 1\n\n    const handleChangePages = (pageNumber) => {\n        setPage(pageNumber)\n    }\n    const addCategoryClick = () => {\n        setOpenAddDialog(true)\n    }\n\n    const addCategory = (category) => {\n        postCategory({\n            data: {\n                \"name\": `${category}`\n            }\n        }).then(res => {\n            console.log(res)\n            getCategories()\n        }).catch(err => {\n            console.log(err)\n        })\n        setOpenAddDialog(false)\n    }\n\n\n    const editCategory = (category) => {\n        if (selectedCategory.name !== category) {\n            updateCategory({\n                data: {\n                    \"id\": `${selectedCategory.id}`,\n                    \"name\": `${category}`,\n                }\n            }).then(res => {\n                console.log(res)\n                getCategories()\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        setOpenEditDialog(false)\n    }\n\n\n    const deleteCategoryHandler = async() => {\n        await deleteCategory({\n            data: {\n                \"id\": `${deleteDialog.id}`\n            }\n        }).then(res => {\n            getCategories()\n            setDeleteDialog({\n                open: false,\n                id: null,\n            })\n        }).catch(err => {\n        })\n    }\n\n    useEffect(() => {\n        getCategories()\n\n    }, [getCategories])\n\n\n    const onCloseDialog = () => {\n        setOpenAddDialog(false)\n        setOpenEditDialog(false)\n        setDeleteDialog({\n            ...deleteDialog,\n            open: false,\n        })\n    }\n\n    return (\n        <div>\n\n            {\n                loading ? <Skeleton variant={\"rect\"} width={'100%'} height={500}/>\n                    : <TableContainer component={Paper}>\n                        <Typography className={classes.title} component={\"span\"}>دسته بندی ها</Typography>\n                        <Button\n                            dir={'ltr'}\n                            className={classes.addProduct}\n                            variant={\"contained\"}\n                            onClick={addCategoryClick}\n                            endIcon={<AddCircleOutlineIcon/>}\n                        >\n                            ساخت دسته بندی جدید\n                        </Button>\n                        <Table className={classes.table} aria-label=\"category\">\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell align=\"right\">نام دسته‌بندی</StyledTableCell>\n                                    <StyledTableCell align=\"right\">تاریخ ایجاد</StyledTableCell>\n                                    <StyledTableCell align=\"right\"/>\n                                    <StyledTableCell align=\"right\"/>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    response.data.data.categories\n                                        .map((row) => (\n                                            <StyledTableRow key={row.id}>\n                                                <StyledTableCell align=\"right\">{row.name}</StyledTableCell>\n                                                <StyledTableCell align=\"right\">\n                                                    {toFaDigit(moment.unix(row.create_date).format(\"jYYYY/jM/jD\"))}\n                                                </StyledTableCell>\n\n                                                <StyledTableCell align=\"right\">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setSelectedCategory(() => {\n                                                                return row\n                                                            })\n                                                            setOpenEditDialog(true)\n                                                        }}\n                                                    >\n                                                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"17.648\"\n                                                                 height=\"17.5\"\n                                                                 viewBox=\"0 0 17.648 17.5\">\n                                                            <g id=\"edit\" transform=\"translate(-1.25 -1.129)\">\n                                                                <path id=\"Path_2582\" data-name=\"Path 2582\"\n                                                                      d=\"M9.157,4H3.59A1.59,1.59,0,0,0,2,5.59V16.723a1.59,1.59,0,0,0,1.59,1.59H14.723a1.59,1.59,0,0,0,1.59-1.59V11.157\"\n                                                                      transform=\"translate(0 -0.434)\" fill=\"none\"\n                                                                      stroke=\"#434343\" strokeLinecap=\"round\"\n                                                                      strokeLinejoin=\"round\" strokeWidth=\"1.5\"/>\n                                                                <path id=\"Path_2583\" data-name=\"Path 2583\"\n                                                                      d=\"M16.349,2.373a1.687,1.687,0,0,1,2.386,2.386l-7.554,7.554L8,13.108l.8-3.181Z\"\n                                                                      transform=\"translate(-1.229)\" fill=\"none\"\n                                                                      stroke=\"#434343\"\n                                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                      strokeWidth=\"1.5\"/>\n                                                            </g>\n                                                        </SvgIcon>\n                                                        <Typography\n                                                            style={{\n                                                                color: '#434343',\n                                                                fontSize: '14px',\n                                                                fontFamily: 'Shabnam',\n                                                                margin: '8px 8px'\n                                                            }}\n                                                            component={'span'}\n                                                        >ویرایش\n                                                        </Typography>\n                                                    </IconButton>\n                                                </StyledTableCell>\n\n                                                <StyledTableCell align=\"right\">\n                                                    <IconButton\n                                                        onClick={() => {\n                                                            setDeleteDialog({\n                                                                open: true,\n                                                                id: row.id,\n                                                            })\n                                                        }}\n                                                    >\n\n                                                        <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"15.9\"\n                                                                 height=\"17.5\"\n                                                                 viewBox=\"0 0 15.9 17.5\">\n                                                            <g id=\"trash-2\" transform=\"translate(-2.25 -1.25)\">\n                                                                <path id=\"Path_2584\" data-name=\"Path 2584\" d=\"M3,6H17.4\"\n                                                                      transform=\"translate(0 -0.8)\" fill=\"none\"\n                                                                      stroke=\"#f16522\"\n                                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                      strokeWidth=\"1.5\"/>\n                                                                <path id=\"Path_2585\" data-name=\"Path 2585\"\n                                                                      d=\"M16.2,5.2V16.4A1.6,1.6,0,0,1,14.6,18h-8A1.6,1.6,0,0,1,5,16.4V5.2m2.4,0V3.6A1.6,1.6,0,0,1,9,2h3.2a1.6,1.6,0,0,1,1.6,1.6V5.2\"\n                                                                      transform=\"translate(-0.4)\" fill=\"none\"\n                                                                      stroke=\"#f16522\"\n                                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                      strokeWidth=\"1.5\"/>\n                                                                <line id=\"Line_26\" data-name=\"Line 26\" y2=\"4.8\"\n                                                                      transform=\"translate(8.6 9.2)\" fill=\"none\"\n                                                                      stroke=\"#f16522\"\n                                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                      strokeWidth=\"1.5\"/>\n                                                                <line id=\"Line_27\" data-name=\"Line 27\" y2=\"4.8\"\n                                                                      transform=\"translate(11.8 9.2)\" fill=\"none\"\n                                                                      stroke=\"#f16522\"\n                                                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                                      strokeWidth=\"1.5\"/>\n                                                            </g>\n                                                        </SvgIcon>\n                                                        <Typography\n                                                            style={{\n                                                                color: '#F16522',\n                                                                fontSize: '14px',\n                                                                fontFamily: 'Shabnam',\n                                                                margin: '8px 8px'\n                                                            }}\n                                                            component={'span'}\n                                                        >حذف\n                                                        </Typography>\n                                                    </IconButton>\n                                                </StyledTableCell>\n\n                                            </StyledTableRow>\n                                        ))}\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n            }\n\n            <AddCategoryDialog\n                onClose={onCloseDialog}\n                add={addCategory}\n                open={openAddDialog}\n                title={'ایجاد دسته‌بندی جدید'}\n                defaultValue={''}\n            />\n\n            <AddCategoryDialog\n                onClose={onCloseDialog}\n                add={editCategory}\n                open={openEditDialog}\n                title={'ویرایش دسته بندی'}\n                defaultValue={selectedCategory.name}\n            />\n            <DeleteDialog\n                onClose={onCloseDialog}\n                open={deleteDialog.open}\n                title={'حذف دسته بندی'}\n                deleteHandler={deleteCategoryHandler}\n            />\n\n            {!loading && <TablePaginationActions numPages={numPages} page={page} onChange={handleChangePages}/>}\n        </div>\n    )\n}\n\nexport default CategorySection","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentsSection.js",["353"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Backdrop, CircularProgress, Typography} from \"@material-ui/core\";\nimport CommentCard from \"./CommentCard\";\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport useAllCommentsData from \"./Actions/useAllCommentsData\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    title: {\n        fontFamily: 'Shabnam',\n        color: '#434343',\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n    visitAll: {\n        // borderStyle: \"none\",\n        // borderColor: '#F8F8F8',\n        // backgroundColor: '#F8F8F8',\n        fontFamily: 'Shabnam',\n        color: '#F16522',\n        fontSize: 16,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color:'#F16522'\n    }\n}), {index: 1});\n\n\nfunction CommentsSection() {\n    const classes = useStyles();\n    const [loadingNewComments, resultNewComments] = useAllCommentsData(true, 0, true)\n    const [loadingAllComments, resultAllComments] = useAllCommentsData(true, 0, false)\n\n    return (\n        <>\n            <Backdrop className={classes.backdrop} open={loadingNewComments || loadingAllComments}>\n                <CircularProgress size={70} color=\"inherit\"/>\n            </Backdrop>\n            <div className={classes.root}>\n                <Grid container spacing={2}>\n                    {\n\n                        <>\n                            <Grid item xs={12} component={\"div\"} className={classes.header}>\n                                <Typography className={classes.title}>نظرات جدید</Typography>\n                                <ItemLink\n                                    to={{\n                                        pathname: '/admin/dashboard/comments/show',\n                                        search: '?new=true',\n                                    }}\n                                >\n                                    <Typography className={classes.visitAll}>مشاهده همه</Typography>\n                                </ItemLink>\n                            </Grid>\n                            {\n                                resultNewComments.comments.slice(0, 2).map((comment) => (\n                                    <Grid item xs={12}>\n                                        <CommentCard\n                                            comment={comment}\n                                        />\n                                    </Grid>\n                                ))\n                            }\n                        </>\n\n                    }\n\n                    {\n                        <>\n                            <Grid item xs={12} component={\"div\"} className={classes.header}>\n                                <Typography className={classes.title}> همه نظرات</Typography>\n                                <ItemLink\n                                    to={{\n                                        pathname: '/admin/dashboard/comments/show',\n                                    }}\n                                >\n                                    <Typography className={classes.visitAll}>مشاهده همه</Typography>\n                                </ItemLink>\n                            </Grid>\n                            {\n                                resultAllComments.comments.slice(0, 2).map((comment) => (\n                                    <Grid item xs={12}>\n                                        <CommentCard\n                                            comment={comment}\n                                        />\n                                    </Grid>\n                                ))\n                            }\n                        </>\n\n                    }\n                </Grid>\n            </div>\n        </>\n    )\n\n}\n\nexport default CommentsSection","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/login/Style.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrdersSection.js",["354","355","356","357","358","359","360"],"import React from \"react\";\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {IconButton, SvgIcon, Typography} from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ItemLink from \"../../Routes/Link/ItemLink\";\nimport TablePaginationActions from \"../Table/Components/TablePaginationActions\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#F4F4F4',\n        fontFamily: 'Shabnam',\n        color: '#50525C',\n        fontSize: 14,\n    },\n    body: {\n        backgroundColor: '#fff',\n        fontFamily: 'Shabnam',\n        color: '#50525C',\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: '100%',\n    },\n    paper: {\n        paddingTop: theme.spacing(0),\n    },\n    title: {\n        fontFamily: 'Shabnam',\n        color: '#434343',\n        fontSize: 20,\n        fontWeight: \"bold\",\n        margin: theme.spacing(3, 3),\n        float: \"right\"\n    },\n    state: {\n        fontFamily: 'Shabnam',\n        fontSize: 14,\n        color: \"white\",\n    },\n    tablePaginationRoot: {\n        position: \"fixed\",\n        left: 0,\n\n    },\n    caption: {\n        fontFamily: 'Shabnam',\n    },\n    toolbar: {\n        fontFamily: 'Shabnam',\n    },\n    export: {\n        margin: theme.spacing(1, 3, 3),\n        float: \"left\"\n    }\n}), {index: 1});\n\n\nfunction OrderSection() {\n    const classes = useStyles();\n\n    const createState = (state) => {\n        switch (state) {\n            case 'new' :\n                return <Chip style={{'background-color': '#F16522'}} className={classes.state} label={'جدید'}/>\n            case 'notSent' :\n                return <Chip style={{'background-color': '#F29500'}} className={classes.state} label={'ارسال نشده'}/>\n            case 'Sent' :\n                return <Chip style={{'background-color': '#22B132'}} className={classes.state} label={'ارسال شده'}/>\n            default:\n                return null\n        }\n    }\n\n    function createData(code, name, count, price, date, state, show) {\n        return {code, name, count, price, date, state, show};\n    }\n\n    const rows = [\n        createData(\"DID2394852\", \"نیما مشهدی رضا\", '۳', \"۲۹۹٫۰۰۰\" + \"تومان\",\n            '۹۸/۱۱/۱۲', createState('new'), ''),\n\n        createData(\"DID2394852\", \"نیما مشهدی رضا\", '۳', \"۲۹۹٫۰۰۰\" + \"تومان\",\n            '۹۸/۱۱/۱۲', createState('notSent'), ''),\n\n        createData(\"DID2394852\", \"نیما مشهدی رضا\", '۳', \"۲۹۹٫۰۰۰\" + \"تومان\",\n            '۹۸/۱۱/۱۲', createState('Sent'), ''),\n\n        createData(\"DID2394852\", \"نیما مشهدی رضا\", '۳', \"۲۹۹٫۰۰۰\" + \"تومان\",\n            '۹۸/۱۱/۱۲', createState('Sent'), ''),\n\n        createData(\"DID2394852\", \"نیما مشهدی رضا\", '۳', \"۲۹۹٫۰۰۰\" + \"تومان\",\n            '۹۸/۱۱/۱۲', createState('Sent'), ''),\n\n    ];\n\n    const numPages = parseInt((rows.length / 10).toString()) + 1\n\n    const [page, setPage] = React.useState(0)\n\n    const handleChangePages = (pageNumber) => {\n        setPage(pageNumber)\n    }\n\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <TableContainer className={classes.paper} component={Paper}>\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <Typography className={classes.title} component={\"span\"}>سفارشات</Typography>\n\n                    {/*<IconButton className={classes.export} aria-label={\"export\"}>*/}\n                    {/*    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\">*/}\n                    {/*        <g id=\"common-file-text-download\" transform=\"translate(-0.25 -0.25)\">*/}\n                    {/*            <circle id=\"Ellipse_128\" data-name=\"Ellipse 128\" cx=\"4.267\" cy=\"4.267\" r=\"4.267\"*/}\n                    {/*                    transform=\"translate(8.217 8.217)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                    strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30125\" data-name=\"Path 30125\" d=\"M17.25,14.25v4.267\"*/}\n                    {/*                  transform=\"translate(-4.767 -3.9)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30126\" data-name=\"Path 30126\" d=\"M16.6,19.6,15,18\"*/}\n                    {/*                  transform=\"translate(-4.117 -4.983)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30127\" data-name=\"Path 30127\" d=\"M17.25,19.6l1.6-1.6\"*/}\n                    {/*                  transform=\"translate(-4.767 -4.983)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30128\" data-name=\"Path 30128\" d=\"M3.75,6.75h7.467\"*/}\n                    {/*                  transform=\"translate(-0.867 -1.733)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30129\" data-name=\"Path 30129\" d=\"M3.75,11.25H8.017\"*/}\n                    {/*                  transform=\"translate(-0.867 -3.033)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30130\" data-name=\"Path 30130\" d=\"M3.75,15.75H6.417\"*/}\n                    {/*                  transform=\"translate(-0.867 -4.333)\" fill=\"none\" stroke=\"#f16522\"*/}\n                    {/*                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\"/>*/}\n                    {/*            <path id=\"Path_30131\" data-name=\"Path 30131\"*/}\n                    {/*                  d=\"M5.55,14.617H1.817A1.067,1.067,0,0,1,.75,13.55V1.817A1.067,1.067,0,0,1,1.817.75H9.375a1.067,1.067,0,0,1,.754.312L12.171,3.1a1.067,1.067,0,0,1,.312.754V5.55\"*/}\n                    {/*                  fill=\"none\" stroke=\"#f16522\" strokeLinecap=\"round\" strokeLinejoin=\"round\"*/}\n                    {/*                  strokeWidth=\"1\"/>*/}\n                    {/*        </g>*/}\n                    {/*    </SvgIcon>*/}\n                    {/*    <Typography*/}\n                    {/*        style={{*/}\n                    {/*            color: '#F16522',*/}\n                    {/*            fontSize: '14px',*/}\n                    {/*            fontFamily: 'Shabnam',*/}\n                    {/*            fontWeight: \"bold\",*/}\n                    {/*            margin: '8px 8px'*/}\n                    {/*        }}*/}\n                    {/*        component={'span'}*/}\n                    {/*    >اکسپورت*/}\n                    {/*    </Typography>*/}\n                    {/*</IconButton>*/}\n                </div>\n                <Table className={classes.table} aria-label=\"Orders\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"right\">کد سفارش</StyledTableCell>\n                            <StyledTableCell align=\"right\">نام مشتری</StyledTableCell>\n                            <StyledTableCell align=\"right\">تعداد کالا</StyledTableCell>\n                            <StyledTableCell align=\"right\">مبلغ سبد خرید</StyledTableCell>\n                            <StyledTableCell align=\"right\">تاریخ سفارش</StyledTableCell>\n                            <StyledTableCell align=\"right\">وضعیت</StyledTableCell>\n                            <StyledTableCell align=\"right\"/>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            rows.slice(page * 10, page * 10 + 10)\n                                .map((row) => (\n                                    <StyledTableRow key={row.code}>\n                                        <StyledTableCell align=\"right\" component=\"th\" scope=\"row\">\n                                            {row.code}\n                                        </StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.name}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.count}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.price}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">{row.state}</StyledTableCell>\n                                        <StyledTableCell align=\"right\">\n                                            <ItemLink text={'مشاهده جزئیات'}\n                                                      to={`/admin/dashboard/orders/${row.code}`}/>\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {/*<TablePaginationActions numPages={numPages} page={page} onChange={handleChangePages}/>*/}\n        </div>\n    )\n\n}\n\nexport default OrderSection","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Fiance/FianceSection.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentsList.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/DashboardLayout.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Product.js",["361"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {Button, CircularProgress, Grid, Typography} from \"@material-ui/core\";\nimport ProductInfo from \"./ProductInfo\";\nimport AddImage from \"./AddImage\";\nimport ProductCategory from \"./ProductCategory\";\nimport ProductCampaign from \"./ProductCampaign\";\nimport ProductTag from \"./ProductTag\";\nimport ProductStock from \"./ProductStock\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport {productData, stockData} from \"./convertProductData\";\nimport {useStyles} from './Styles/ShowProductStyle'\nimport GetProductData from \"./GetProductData\";\nimport EditImage from \"./EditImage\";\nimport {useHistory} from 'react-router-dom'\nimport {Skeleton} from \"@material-ui/lab\";\nimport PropTypes from \"prop-types\";\n\nconst initialData = {\n    colorTags: new Set(),\n    sizeTags: new Set(),\n    productInfoValues: {\n        title: '',\n        detail: '',\n        describe: '',\n        price: '0',\n        discount: '0',\n    },\n    selectedCategory: {\n        name: \"\",\n    },\n    selectedCampaign: {\n        id: null,\n        value: \"نا مشخص\",\n        label: \"نا مشخص\",\n    },\n    tags: new Set(),\n    stockValues: [],\n    afterOrderValue: 0,\n    isExist: true,\n    productType: 1,\n}\n\n\nfunction Product(props) {\n    const classes = useStyles();\n    const history = useHistory()\n    const {edit} = props\n    let params = (new URL(document.location)).searchParams;\n    const code = params.get(\"code\")\n    const [saveLoading, setSaveLoading] = useState(false)\n    const [editLoading, setEditLoading] = useState(false)\n\n    const [, postProductData] = useAxios({\n        url: '/admin/merchandise_mng/create_merchandise',\n        method: 'POST'\n    }, {manual: true})\n\n    const [, pathProductData] = useAxios({\n        url: '/admin/merchandise_mng/update_merchandise',\n        method: 'PATCH',\n    }, {manual: true})\n\n    const [, postStockData] = useAxios({\n        url: 'admin/merchandise_mng/create_stock',\n        method: 'POST'\n    }, {manual: true})\n\n    const [, removeStockData] = useAxios({\n        url: '/admin/merchandise_mng/remove_stock',\n        method: 'DELETE',\n    }, {manual: true})\n\n    const [, pathImage] = useAxios({\n        url: '/admin/merchandise_mng/upload_image',\n        method: 'PATCH'\n    }, {manual: true})\n\n    /** start of productInfo states **/\n    const [colorTags, setColorTags] = useState(initialData.colorTags)\n\n    const [sizeTags, setSizeTags] = useState(initialData.sizeTags)\n\n    const [productInfoValues, setProductInfoValues] = useState(initialData.productInfoValues)\n    /** end of productInfo states **/\n\n    /** start of Add Image states **/\n    const [preview_imageFormData, setPreview_imageFormData] = useState()\n    const [other_imageFormData, setOther_imageFormData] = useState([])\n    /** end of Add Image states **/\n\n    /** start of Edit Image states **/\n    const [preview_image, setPreview_image] = useState(null)\n    const [other_images, setOther_images] = useState([])\n    /** end of Edit Image states **/\n\n    /** start of selectedCampaign, selectedCategory, tag states **/\n    const [selectedCategory, setSelectedCategory] = useState(initialData.selectedCategory)\n\n    const [selectedCampaign, setSelectedCampaign] = useState(initialData.selectedCampaign)\n\n    const [tags, setTags] = useState(initialData.tags)\n    /** end of selectedCampaign, selectedCategory, tag states **/\n\n    /**start of productStock states **/\n        // stockValues include: array Of {color,size, count}\n    const [stockValues, setStockValues] = useState(initialData.stockValues)\n\n    const [afterOrderValue, setAfterOrderValue] = useState(initialData.afterOrderValue)\n\n    const [isExist, setIsExist] = useState(initialData.isExist)\n\n    const [productType, setProductType] = useState(initialData.productType);\n    /** end of productStock states **/\n    let stock_list = useRef([])\n    useEffect(() => {\n        async function getValues() {\n            setEditLoading(true)\n            let newData = await GetProductData()\n            setColorTags(newData.colorTags)\n            setSizeTags(newData.sizeTags)\n            setProductInfoValues(newData.productInfoValues)\n            setSelectedCategory(newData.selectedCategory)\n            setSelectedCampaign(newData.selectedCampaign)\n            setTags(newData.tags)\n            setStockValues(newData.stockValues)\n            setAfterOrderValue(newData.afterOrderValue)\n            setIsExist(newData.isExist)\n            setProductType(newData.productType)\n            setPreview_image(newData.preview_image)\n            setOther_images(newData.other_images)\n            stock_list.current = newData.stock_list\n            setEditLoading(false)\n        }\n\n        if (edit)\n            getValues().then()\n        else {\n            setColorTags(initialData.colorTags)\n            setSizeTags(initialData.sizeTags)\n            setProductInfoValues(initialData.productInfoValues)\n            setSelectedCategory(initialData.selectedCategory)\n            setSelectedCampaign(initialData.selectedCampaign)\n            setTags(initialData.tags)\n            setStockValues(initialData.stockValues)\n            setAfterOrderValue(initialData.afterOrderValue)\n            setIsExist(initialData.isExist)\n            setProductType(initialData.productType)\n\n        }\n    }, [edit])\n\n    useEffect(() => {\n        if (!edit) {\n            setColorTags(new Set())\n            setSizeTags(new Set())\n            setTags(new Set())\n        }\n    }, [edit])\n\n\n    const handleSubmit = async () => {\n        setSaveLoading(true)\n        try {\n            const response = await postProductData({\n                data:\n                    productData(0, false, productInfoValues, selectedCategory,\n                        [...tags], [...colorTags], [...sizeTags],\n                        selectedCampaign, isExist, productType, afterOrderValue)\n\n            })\n            const id = response.data.data.id\n\n            for (let i = 0; i < colorTags.size * sizeTags.size && sizeTags.size > 0; i++) {\n                await postStockData({\n                    data:\n                        stockData(id, productType, i, stockValues, isExist)\n                })\n            }\n\n            if (preview_imageFormData) {\n                await pathImage({\n                    url: `/admin/merchandise_mng/upload_image?id=${id}`,\n                    data: preview_imageFormData\n                })\n            }\n\n            for (let i = 0; i < other_imageFormData.length; i++) {\n                await pathImage({\n                    url: `/admin/merchandise_mng/upload_image?id=${id}`,\n                    data: other_imageFormData[i]\n                })\n            }\n        } catch (err) {}\n\n        setSaveLoading(false)\n        history.push('/admin/dashboard/products')\n    }\n\n    const handleEdit = async () => {\n        setSaveLoading(true)\n        let params = (new URL(document.location)).searchParams;\n        const id = params.get(\"id\")\n        try {\n            await pathProductData({\n                url: `/admin/merchandise_mng/update_merchandise`,\n                data: productData(id, true, productInfoValues, selectedCategory,\n                    [...tags], [...colorTags], [...sizeTags],\n                    selectedCampaign, isExist, productType, afterOrderValue)\n            })\n        } catch (err) {\n        }\n\n        for (const stock of stock_list.current) {\n            try {\n                await removeStockData({\n                    data: {\n                        \"id\": stock.id,\n                    }\n                })\n            }catch (err){}\n        }\n\n        for (let i = 0; i < colorTags.size * sizeTags.size && sizeTags.size > 0; i++) {\n            try {\n                const res = await postStockData({\n                    data:\n                        stockData(id, productType, i, stockValues, isExist)\n                })\n            } catch (err) {\n            }\n        }\n        setSaveLoading(false)\n        history.push('/admin/dashboard/products')\n    }\n\n    return (\n        <div className={classes.root}>\n\n            <Grid container direction={\"row\"} className={classes.container} spacing={2}>\n\n                <Grid item md={12} style={{margin: '0px 32px 32px 32px'}}>\n                    {\n                        edit\n                            ? <Typography className={classes.title}>{`ویرایش محصول ${code}`}</Typography>\n                            : <Typography className={classes.title}>اضافه کردن محصول</Typography>\n                    }\n\n                </Grid>\n\n                <Grid container xs={12} md={8} className={classes.gridRight} spacing={2}>\n                    <Grid style={{position: 'relative'}} item xs={12} md={12}>\n\n                        {\n                            editLoading\n                                ? <Skeleton\n                                    variant=\"rect\"\n                                    height={761}\n                                    width={'100%'}\n                                />\n                                : <ProductInfo\n                                    colorTags={colorTags}\n                                    setColorTags={setColorTags}\n                                    sizeTags={sizeTags}\n                                    setSizeTags={setSizeTags}\n                                    productInfoValues={productInfoValues}\n                                    setProductInfoValues={setProductInfoValues}\n                                />\n                        }\n                    </Grid>\n                </Grid>\n\n                <Grid container xs={12} md={4} className={classes.gridLeft}>\n\n                    <Grid item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            edit\n                                ?\n                                editLoading\n                                    ? <Skeleton\n                                        variant=\"rect\"\n                                        height={223}\n                                        width={'100%'}/>\n                                    : <EditImage\n                                        preview_image={preview_image}\n                                        setPreview_image={setPreview_image}\n                                        other_images={other_images}\n                                        setOther_images={setOther_images}\n                                    />\n                                : <AddImage\n                                    other_imageFormData={other_imageFormData}\n                                    setOther_imageFormData={setOther_imageFormData}\n                                    preview_imageFormData={preview_imageFormData}\n                                    setPreview_imageFormData={setPreview_imageFormData}\n                                />\n                        }\n\n                    </Grid>\n\n                    <Grid item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            editLoading\n                                ? <Skeleton\n                                    height={223} width={'100%'}/>\n                                : <ProductCategory\n                                    selectedCategory={selectedCategory}\n                                    setSelectedCategory={setSelectedCategory}\n                                />\n                        }\n                    </Grid>\n\n                    <Grid item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            editLoading\n                                ? <Skeleton variant=\"rect\"\n                                            height={223} width={'100%'}/>\n\n                                : <ProductCampaign\n                                    selectedCampaign={selectedCampaign}\n                                    setSelectedCampaign={setSelectedCampaign}\n                                />\n                        }\n                    </Grid>\n\n                    <Grid item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            editLoading\n                                ? <Skeleton\n                                    variant=\"rect\"\n                                    height={223}\n                                    width={'100%'}/>\n                                : <ProductTag\n                                    tags={tags}\n                                    setTags={setTags}\n                                />\n                        }\n                    </Grid>\n\n                    <Grid item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            editLoading\n                                ? <Skeleton\n                                    variant=\"rect\"\n                                    height={223}\n                                    width={'100%'}/>\n                                : <ProductStock\n                                    colorTags={colorTags}\n                                    sizeTags={sizeTags}\n\n                                    stockValues={stockValues}\n                                    setStockValues={setStockValues}\n\n                                    afterOrderValue={afterOrderValue}\n                                    setAfterOrderValue={setAfterOrderValue}\n\n                                    isExist={isExist}\n                                    setIsExist={setIsExist}\n\n                                    productType={productType}\n                                    setProductType={setProductType}\n                                />\n                        }\n                    </Grid>\n\n                    <Grid hidden={editLoading} item xs={12} md={12} className={classes.gridLeftElements}>\n                        {\n                            edit\n                                ? <Button\n                                    disabled={saveLoading}\n                                    fullWidth\n                                    onClick={handleEdit}\n                                    className={classes.save}\n                                    variant={\"contained\"}\n                                >\n                                    ویرایش اطلاعات\n                                </Button>\n\n                                : <Button\n                                    disabled={saveLoading}\n                                    fullWidth\n                                    onClick={handleSubmit}\n                                    className={classes.save}\n                                    variant={\"contained\"}\n                                >\n                                    ثبت اطلاعات\n                                </Button>\n                        }\n                        {saveLoading && <CircularProgress size={38} className={classes.buttonProgress}/>}\n\n                    </Grid>\n\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nProduct.propTypes = {\n    edit: PropTypes.bool.isRequired,\n};\n\nexport default Product","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Account/Account.js",["362"],"import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {Button, CardContent, CardHeader, Grid, Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport {useStyle} from \"./Style\";\nimport {useAxios} from \"../../utills/Hooks/useAxios\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction Account() {\n    const classes = useStyle()\n    const [value, setValue] = useState({\n        password: '',\n        rePassword: '',\n        showPassword: false\n    })\n    const textField = (id, defaultValue) => {\n        switch (id) {\n            case 'password':\n                return (<TextField\n                    dir={'ltr'}\n                    id={id}\n                    type={value.showPassword ? 'text' : 'password'}\n                    fullWidth\n                    value={value.password}\n                    onChange={handleChange('password')}\n                    margin={'normal'}\n                    InputProps={{\n                        classes: {\n                            input: classes.textField\n                        },\n                        endAdornment:\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                >\n                                    {value.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                </IconButton>\n                            </InputAdornment>\n                    }}\n                    variant=\"outlined\"\n                />)\n            case 'new-password':\n                return (\n                    <TextField\n                        dir={'ltr'}\n                        id={id}\n                        type={value.showPassword ? 'text' : 'password'}\n                        fullWidth\n                        value={value.rePassword}\n                        onChange={handleChange('rePassword')}\n                        margin={'normal'}\n\n                        InputProps={{\n                            classes: {\n                                input: classes.textField\n                            },\n                            endAdornment:\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                    >\n                                        {value.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                    </IconButton>\n                                </InputAdornment>\n                        }}\n                        variant=\"outlined\"\n                    />\n                )\n            case 'email':\n                return (\n                    <TextField\n                        dir={'ltr'}\n                        id={id}\n                        fullWidth\n                        defaultValue={defaultValue}\n                        margin={'normal'}\n                        InputProps={{\n                            classes: {\n                                style: {\n                                    direction: 'ltr'\n                                },\n                                input: classes.textField\n                            }\n                        }}\n                        variant=\"outlined\"\n                    />\n                )\n            default:\n                return (<>\n                    <TextField\n                        id={id}\n                        fullWidth\n                        defaultValue={defaultValue}\n                        margin={'normal'}\n                        InputProps={{\n                            classes: {\n                                input: classes.textField\n                            }\n                        }}\n                        variant=\"outlined\"\n                    />\n                </>)\n        }\n    }\n\n    const [{response, loading}, fetch] = useAxios({\n            url: '/user/get_profile',\n        }\n    )\n\n\n    if(loading)\n        return <LinearProgress className={classes.loading}/>\n\n    const data = response.data.data\n\n    const accountItems = [\n        {title: 'نام و نام‌خانوادگی', id: 'name', defaultValue: data.name_and_last_name},\n        {title: 'شماره موبایل', id: 'mobile', defaultValue: data.mobile_number},\n        {title: 'رمز عبور', id: 'password', defaultValue: ''},\n        {title: 'رمز عبور جدید', id: 'new-password', defaultValue: ''}\n    ]\n    const handleChange = (props) => (event) => {\n        setValue({...value, [props]: event.target.value});\n    };\n\n    const handleClickShowPassword = () => {\n        setValue({...value, showPassword: !value.showPassword});\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <>\n            <Card>\n                <CardHeader\n                    title={<Typography className={classes.title}>حساب کاربری</Typography>}\n                />\n                <CardContent>\n                    <Grid container spacing={2}>\n                        {\n                            accountItems.map((item) => (\n                                <Grid item xs={12} md={6}>\n                                    <Typography className={classes.label}>{item.title}</Typography>\n                                    {textField(item.id, item.defaultValue)}\n                                </Grid>\n                            ))\n\n                        }\n                    </Grid>\n                </CardContent>\n            </Card>\n            <Button className={classes.save} variant={\"contained\"}>ثبت اطلاعات</Button>\n        </>\n    )\n}\n\nexport default Account","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/ToFaDigit.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Attributes.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/SocialNetwork.js",["363"],"import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardContent, CardHeader, Grid, Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {useStyle} from \"./Styles/SocialNetworkStyle\";\nimport PropTypes from \"prop-types\";\n\nconst socialNames = [\n    {label: 'آپارارت', id: 'aparat'},\n    {label: 'توییتر', id: 'twitter'},\n    {label: 'تلگرام', id: 'telegram'},\n    {label: 'اینستاگرام', id: 'instagram'},\n    {label: 'یوتیوب', id: 'youtube'},\n]\n\nfunction SocialNetwork(props) {\n    const classes = useStyle()\n    const {socialNetwork, setSocialNetwork} = props\n    const handleChangeValues = (id, value) => (event) => {\n        setSocialNetwork(prevState => {\n            prevState[id - 1] = {\n                ...prevState[id - 1],\n                [value]: event.target.value,\n            }\n            return [...prevState]\n        })\n    }\n\n\n    return (\n        <Card>\n            <CardHeader\n                title={<Typography className={classes.title}>شبکه های اجتماعی</Typography>}\n            />\n            <CardContent>\n                <Grid container>\n                    {socialNetwork.map((social) => (\n                        <Grid item md={3} xs={12}>\n                            <Typography className={classes.label}>{social.title}</Typography>\n                            <div className={classes.root}>\n                                <TextField\n                                    id={social.id}\n                                    placeholder={'آیدی شما'}\n                                    value={social.link}\n                                    onChange={handleChangeValues(social.id, \"link\")}\n                                    fullWidth\n                                    margin={'normal'}\n                                    InputProps={{\n                                        classes: {\n                                            input: classes.textField,\n                                        }\n                                    }}\n                                    variant=\"outlined\"\n                                />\n                            </div>\n                        </Grid>\n                    ))}\n                </Grid>\n            </CardContent>\n\n        </Card>\n    )\n}\n\nSocialNetwork.propTypes = {\n    socialNetwork: PropTypes.object.isRequired,\n    setSocialNetwork: PropTypes.func.isRequired,\n};\n\nexport default SocialNetwork","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Sliders.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/useSettingData.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/DateFormat.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Account/Style.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/GetProductData.js",["364"],"import axios from \"axios\";\n\nasync function GetProductData() {\n    let params = (new URL(document.location)).searchParams;\n    const id = params.get(\"id\")\n    let data = {}\n    if (id !== null) {\n        const productData = await axios.get(\n            `https://api.didartshop.ir/admin/merchandise_mng/get_merchandise?id=${id}`,\n            {\n                headers: {\n                    'Authorization': localStorage.getItem('Authorization')\n                }\n            }\n        )\n\n\n        const setCampaign = (campaign) => {\n            let id = campaign === null ? null : campaign.id\n            switch (id) {\n                case 1:\n                    return {\n                        id: 1,\n                        value: \"کمپین ۱\",\n                        label: \"کمپین ۱\",\n                    }\n                case 2:\n                    return {\n                        id: 2,\n                        value: \"کمپین ۲\",\n                        label: \"کمپین ۲\",\n                    }\n                case 3: {\n                    return {\n                        id: 3,\n                        value: \"کمپین ۳\",\n                        label: \"کمپین ۳\",\n                    }\n                }\n                default:\n                    return {\n                        id: null,\n                        value: \"نا مشخص\",\n                        label: \"نا مشخص\",\n                    }\n            }\n        }\n        const setStockValues = (stock_list) => {\n            let stockValues = []\n            for (let i = 0; i < stock_list.length; i++) {\n                stockValues.push({\n                    color: stock_list[i].color,\n                    size: stock_list[i].size,\n                    count: stock_list[i].stock_number,\n                })\n            }\n            return stockValues\n        }\n\n        const merchandise = productData.data.data.merchandise\n\n        data = {\n            colorTags: new Set(merchandise.color_list),\n            sizeTags: new Set(merchandise.size_list),\n            productInfoValues: {\n                title: merchandise.title,\n                detail: merchandise.specification,\n                describe: merchandise.description,\n                price: merchandise.price,\n                discount:\n                    merchandise.percent_of_discount === null ? 0\n                        : merchandise.percent_of_discount * 100,\n            },\n            selectedCategory: merchandise.category,\n            selectedCampaign: setCampaign(merchandise.campaign),\n            tags: new Set(merchandise.tag_list),\n            stockValues: setStockValues(merchandise.stock_list),\n            stock_list: merchandise.stock_list,\n            afterOrderValue: merchandise.merchandise_type == 2 && merchandise.is_exist ? merchandise.stock_number : 0,\n            isExist: merchandise.is_exist,\n            productType: merchandise.merchandise_type,\n            preview_image: merchandise.preview_image,\n            other_images: merchandise.other_image_list,\n        }\n    }\n\n\n    return data\n}\n\nexport default GetProductData","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/EditImage.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/convertProductData.js",["365"],"export const productData = (id, path, InfoValues, category, tags, colors,\n                            sizes, campaign, isExist, product_type,\n                            afterOrderCount) => {\n\n    let data = {\n        \"merchandise_type\": product_type,\n        \"title\": InfoValues.title,\n        \"price\": InfoValues.price,\n        \"has_discount\": InfoValues.discount !== 0,\n        \"percent_of_discount\": InfoValues.discount / 100,\n        \"specification\": InfoValues.detail,\n        \"description\": InfoValues.describe,\n        \"category\": category.id,\n        \"tag_list\": tags,\n        \"color_list\": colors,\n        \"size_list\": sizes,\n        \"campaign\": campaign.id,\n        \"is_exist\": isExist,\n    }\n    if (path){\n        data = {\n            ...data,\n            \"id\": id,\n        }\n    }\n    if (product_type == 1) {\n        return data\n    } else if (isExist) {\n        return {\n            ...data,\n            \"stock_number\": afterOrderCount,\n        }\n    } else {\n        return data\n    }\n}\n\nexport const stockData = (id, product_type, index, stockValues, isExist) => {\n    return {\n        \"merchandise\": id,\n        \"size\": stockValues[index].size,\n        \"color\": stockValues[index].color,\n        \"stock_number\": isExist && product_type == 1 ? parseInt(stockValues[index].count) : 0,\n    }\n}\n\n\n","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useAxios.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/Link/ItemLink.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductSectionStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ShowProductStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/WebsiteManagmentStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/DiscountStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Components/TablePaginationActions.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Styles/StyledTableRow.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Table/Styles/StyledTableCell.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductCampaign.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductTag.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductCategory.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductStock.js",["366","367","368","369"],"import React, {useEffect} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {CardContent, CardHeader, Divider, Grid, Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport {StyledRadio, StyledSwitch, useStyle} from \"./Styles/ProductStockStyle\";\n\nfunction createData(color, size, count) {\n    return {color, size, count};\n\n}\n\nfunction ProductStock(props) {\n    const classes = useStyle()\n    const\n        {\n            colorTags, sizeTags,\n            stockValues, setStockValues,\n            afterOrderValue, setAfterOrderValue,\n            isExist, setIsExist,\n            productType, setProductType\n        } = props\n\n    const getCountBack = (color, size, products) => {\n        for (let i = 0; i < products.length; i++) {\n            if (products[i].color === color && products[i].size === size) {\n                return products[i].count\n            }\n        }\n        return 0\n    }\n\n\n    useEffect(() => {\n        if (colorTags.size !== 0 && sizeTags.size !== 0) {\n            let copy = stockValues\n            setStockValues([])\n            for (let i = 0; i < [...colorTags].length; i++) {\n                for (let j = 0; j < [...sizeTags].length; j++) {\n                    setStockValues(prevState => {\n                        return [...prevState,\n                            createData([...colorTags][i],\n                                [...sizeTags][j],\n                                getCountBack([...colorTags][i], [...sizeTags][j], copy)\n                            )]\n                    })\n                }\n            }\n\n        } else {\n            setStockValues([])\n        }\n    }, [colorTags, sizeTags])\n\n\n    const handleChangeRadio = (event) => {\n        setProductType(event.target.value === 'در انبار' ? 1 : 2)\n    };\n    const handleChangeSwitch = (event) => {\n        setIsExist(event.target.checked)\n    };\n\n\n    const handleChange = (props) => (event) => {\n        setStockValues(() => {\n            let changedProducts = [...stockValues]\n            changedProducts[props].count = event.target.value\n            return changedProducts\n        })\n    }\n    const handleAfterOrderCount = (event) => {\n        setAfterOrderValue(event.target.value)\n    }\n\n    const inStock = (\n        <Grid direction={\"row\"} container className={classes.container}>\n            <Grid container>\n                <Grid item xs={4} style={{textAlign: 'center'}}>\n                    <span className={classes.label}>رنگ</span>\n                </Grid>\n                <Grid item xs={4} style={{textAlign: 'center'}}>\n                    <span className={classes.label}>سایز</span>\n                </Grid>\n                <Grid item xs={4} style={{textAlign: 'center'}}>\n                    <span className={classes.label}>تعداد</span>\n                </Grid>\n            </Grid>\n            {\n                stockValues.map((product, index) => (\n                    <Grid container spacing={1}>\n                        <Grid item xs={4}>\n                            <TextField\n                                value={product.color}\n                                margin={'normal'}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.textFieldColor\n                                    }\n                                }}\n                                disabled\n                                variant=\"outlined\"\n\n                            />\n                        </Grid>\n                        <Grid item xs={4} style={{textAlign: 'center'}}>\n                            <TextField\n                                value={product.size}\n\n                                margin={'normal'}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.textFieldSize\n                                    }\n                                }}\n                                variant=\"outlined\"\n                                disabled\n                            />\n                        </Grid>\n                        <Grid item xs={4} style={{textAlign: 'center'}}>\n                            <TextField\n                                helperText={'برای ناموجود 0 لحاظ کنید'}\n                                margin={'normal'}\n                                value={product.count}\n                                onChange={handleChange(index)}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.textFieldCount\n                                    }\n                                }}\n                                FormHelperTextProps={{\n                                    style: {\n                                        fontFamily: 'Shabnam',\n                                        fontSize: 10,\n                                        textAlign: 'center'\n                                    }\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                    </Grid>\n                ))\n            }\n\n        </Grid>\n    )\n\n\n    const afterOrder = (\n        <>\n            <Typography className={classes.label}>تعداد</Typography>\n            <TextField\n                dir={'ltr'}\n                id={'afterOrder-count'}\n                margin={'normal'}\n                fullWidth\n                onChange={handleAfterOrderCount}\n                value={afterOrderValue}\n                InputProps={{\n                    classes: {\n                        input: classes.textFieldCount\n                    }\n                }}\n                FormHelperTextProps={{\n                    style: {\n                        fontFamily: 'Shabnam',\n                        fontSize: 14,\n                        textAlign: 'right'\n                    }\n                }}\n                variant=\"outlined\"\n            />\n\n        </>\n    )\n\n\n    return (\n        <Card>\n            <CardHeader\n                title={\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                        <Typography className={classes.title}>موجودی</Typography>\n                        <StyledSwitch\n                            checked={isExist}\n                            onChange={handleChangeSwitch}\n                            name=\"موجودی\"\n                        />\n                    </div>\n                }\n\n            />\n            {\n                isExist ?\n                    <CardContent>\n\n                        <StyledRadio\n                            checked={productType == 1}\n                            onChange={handleChangeRadio}\n                            value=\"در انبار\"\n                            name=\"در انبار\"\n                            inputProps={{'aria-label': 'در انبار'}}\n                        />\n                        <span className={classes.label}>در انبار</span>\n                        <StyledRadio\n                            checked={productType == 2}\n                            onChange={handleChangeRadio}\n                            value=\"ساخت پس از سفارش\"\n                            name=\"ساخت پس از سفارش\"\n                            inputProps={{'aria-label': 'ساخت پس از سفارش'}}\n                        />\n                        <span className={classes.label}>ساخت پس از سفارش</span>\n                        <Divider/>\n                        <br/>\n                        {\n                            productType == 1 ?\n                                stockValues.length > 0 ? inStock : null\n                                :\n                                afterOrder\n                        }\n                    </CardContent>\n                    :\n                    null\n            }\n        </Card>\n    )\n}\n\nProductStock.propTypes = {\n    colorTags: PropTypes.any.isRequired,\n    sizeTags: PropTypes.any.isRequired,\n\n    stockValues: PropTypes.array.isRequired,\n    setStockValues: PropTypes.func.isRequired,\n\n    isExist: PropTypes.bool.isRequired,\n    setIsExist: PropTypes.func.isRequired,\n\n    afterOrderValue: PropTypes.string.isRequired,\n    setAfterOrderValue: PropTypes.func.isRequired,\n    productType: PropTypes.number.isRequired,\n    setProductType: PropTypes.func.isRequired,\n};\n\nexport default ProductStock","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/AddImage.js",["370"],"import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {Button, CardContent, CardHeader, CardMedia, IconButton, Typography} from \"@material-ui/core\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport AddImageDialog from \"./AddImageDialog\";\nimport PropTypes from \"prop-types\";\nimport useForceUpdate from '../../utills/Hooks/useForceUpdate'\nimport {useStyle} from \"./Styles/ImagesStyle\";\n\n\nfunction AddImage(props) {\n    const\n        {\n            preview_imageFormData, setPreview_imageFormData,\n            other_imageFormData, setOther_imageFormData\n        } = props\n    const classes = useStyle()\n    const [open, setOpen] = useState(false);\n    const [preview_imageFile, setPreview_imageFile] = useState(null)\n    const [other_imageFiles, setOther_imageFiles] = useState([])\n\n    const forceUpdate = useForceUpdate();\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClickOpen = () => {\n        setOpen(true)\n    }\n    const uploadImageHandler = (imageFile) => {\n        if (preview_imageFile === null) {\n            setPreview_imageFile(imageFile)\n\n            const formData = new FormData();\n            formData.append(\"preview_image\", imageFile);\n            setPreview_imageFormData(formData)\n        } else {\n            setOther_imageFiles(prevState => {\n                return [...prevState, imageFile]\n            })\n\n            const formData = new FormData()\n            formData.append(\"other_image\", imageFile)\n            setOther_imageFormData(prevState => {\n                return [...prevState, formData]\n            })\n\n        }\n        setOpen(false)\n\n    }\n\n    const editImageHandler = (index, isPreview) => (event) => {\n        const imageFile = event.target.files[0]\n        if (isPreview) {\n            setPreview_imageFile(imageFile)\n            const formData = new FormData()\n            formData.append(\"preview_image\", imageFile)\n            setPreview_imageFormData(formData)\n        } else {\n            let editedArray = other_imageFiles\n            editedArray[index] = imageFile\n            setOther_imageFiles(editedArray)\n\n            let editedFormDataArray = other_imageFormData\n            const formData = new FormData()\n            formData.append(\"other_image\", imageFile)\n            editedFormDataArray[index] = formData\n            setOther_imageFormData(editedFormDataArray)\n\n        }\n        forceUpdate()\n    }\n\n    const deleteImageHandler = (index, isPreview) => {\n        if (isPreview) {\n            setPreview_imageFile(null)\n            // edit form data of preview images\n            setPreview_imageFormData(null)\n            if (other_imageFiles.length > 0) {\n                setPreview_imageFile(other_imageFiles[0])\n                // send form data of preview image\n                const formData = new FormData();\n                formData.append(\"preview_image\", other_imageFiles[0]);\n                setPreview_imageFormData(formData)\n\n                setOther_imageFiles(other_imageFiles\n                    .filter(item => item !== other_imageFiles[0]))\n                // edit form data of other images\n                setOther_imageFormData(other_imageFormData\n                    .filter(item => item !== other_imageFormData[0]))\n            }\n        } else {\n            setOther_imageFiles(other_imageFiles\n                .filter(item => item !== other_imageFiles[index]))\n            // edit form data of other images\n            setOther_imageFormData(other_imageFormData\n                .filter(item => item !== other_imageFormData[index]))\n        }\n\n    }\n\n\n    return (\n        <Card>\n            <CardHeader\n                title={<Typography className={classes.title}>عکس ها</Typography>}\n            />\n            <CardContent>\n                {\n                    preview_imageFile ?\n                        <Card className={classes.root} style={{position: 'relative'}}>\n                            <Typography className={classes.previewTitle}>عکس پیش نمایش</Typography>\n                            <CardMedia\n                                className={classes.cover}\n                                image={URL.createObjectURL(preview_imageFile)}\n                                component={'img'}\n                            />\n                            <CardContent className={classes.detail}>\n                                <CardActions className={classes.actions}>\n                                    <input\n                                        accept=\"image/*\"\n                                        hidden\n                                        id={`upload-preview-image`}\n                                        multiple\n                                        type=\"file\"\n                                        onChange={editImageHandler(0, true)}\n                                    />\n                                    <label htmlFor={`upload-preview-image`}>\n                                        <Button\n                                            size={\"small\"}\n                                            className={classes.upload}\n                                            variant={\"contained\"}\n                                            component={'span'}\n                                        >\n                                            آپلود\n                                        </Button>\n                                    </label>\n                                    <Button\n                                        onClick={() => deleteImageHandler(0, true)}\n                                        size={\"small\"}\n                                        className={classes.delete}\n                                    >\n                                        حذف\n                                    </Button>\n                                </CardActions>\n                            </CardContent>\n                        </Card> : null\n                }\n\n                {\n                    other_imageFiles.map((imageFile, index) => (\n                        <Card className={classes.root}>\n                            <CardMedia\n                                className={classes.cover}\n                                image={URL.createObjectURL(imageFile)}\n                                // title={imageFile.name}\n                                component={'img'}\n                            />\n                            <CardContent className={classes.detail}>\n                                <CardActions className={classes.actions}>\n                                    <input\n                                        accept=\"image/*\"\n                                        hidden\n                                        id={`upload-image-${index}`}\n                                        multiple\n                                        type=\"file\"\n                                        onChange={editImageHandler(index, false)}\n                                    />\n                                    <label htmlFor={`upload-image-${index}`}>\n                                        <Button\n                                            size={\"small\"}\n                                            className={classes.upload}\n                                            variant={\"contained\"}\n\n                                            component={'span'}\n                                        >\n                                            آپلود\n                                        </Button>\n                                    </label>\n                                    <Button\n                                        onClick={() => deleteImageHandler(index, false)}\n                                        size={\"small\"}\n                                        className={classes.delete}\n                                    >\n                                        حذف\n                                    </Button>\n                                </CardActions>\n\n                            </CardContent>\n                        </Card>\n                    ))\n                }\n                <div className={classes.addImage}>\n                    <IconButton onClick={handleClickOpen} className={classes.addImage}>\n                        <AddCircleOutlineIcon/>\n                    </IconButton>\n                    <span>اضافه کردن عکس جدید</span>\n                </div>\n                <AddImageDialog uploadImageHandler={uploadImageHandler} open={open} onClose={handleClose}/>\n\n            </CardContent>\n        </Card>\n    )\n\n}\n\nAddImage.propTypes = {\n    preview_imageFormData: PropTypes.any.isRequired,\n    setPreview_imageFormData: PropTypes.func.isRequired,\n    other_imageFormData: PropTypes.array.isRequired,\n    setOther_imageFormData: PropTypes.func.isRequired,\n};\n\nexport default AddImage","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/ProductInfo.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/DashboardMenu.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/Styles/LayoutStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/AttributesStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/SocialNetworkStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Management/Styles/SlidersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useForceUpdate.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ImagesStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/AddImageDialog.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/Routes/Link/ListItemLink.js",["371"],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductStockStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Products/Styles/ProductInfoStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardForms/Styles/MenuStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/CommentCard.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Fiance/Style.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Category/AddCategoryDialog.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/CampaignSectionStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/useCampaignsData.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignDiscount.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignAmazing.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/CampaignBanners.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CartCost.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/ProductDetail.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CartDetail.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/CustomerInfo.js",["372","373"],"import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n    CardHeader,\n    IconButton,\n    SvgIcon,\n    Table, TableBody,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography\n} from \"@material-ui/core\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#fff',\n        fontFamily: 'Shabnam',\n        color: '#50525C',\n        opacity : '70%',\n        fontSize: 14,\n    },\n    body: {\n        backgroundColor: '#fff',\n        fontFamily: 'Shabnam',\n        color: '#50525C',\n        fontSize: 16,\n    },\n}))(TableCell);\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '230px',\n    },\n    details: {\n        display: \"flex\",\n        justifyContent : \"space-around\",\n        flexDirection: \"row\",\n    },\n    card: {\n        display: 'flex',\n        // padding: theme.spacing(15),\n        // textAlign: 'center',\n        [theme.breakpoints.down('sm')]: {\n            // padding: theme.spacing(15),\n            // width: '100%'\n        }\n    },\n    title: {\n        fontFamily: 'Shabnam',\n        color: '#434343',\n        fontSize: 20,\n        fontWeight: \"bold\",\n    },\n    textStyle : {\n        backgroundColor: '#fff',\n        fontFamily: 'Shabnam',\n        color: '#50525C',\n        opacity : '70%',\n        fontSize: 14,\n    },\n    address : {\n        marginRight : theme.spacing(2),\n    }\n\n}), {index: 1});\n\n\n\nconst details = ['نام مشتری', 'ایمیل', 'شماره موبایل', 'استان', 'شهر']\n\nconst customer = ['نیما مشهدی رضا', 'ArashDma@gmail.com', '۰۹۳۶۶۱۸۳۴۹۳', 'تهران', 'تهران', 'پونک جنوبی، ایران زمین جنوبی، کوچه سعادت، پلاک ۳۳ واحد ۰۲']\n\nfunction CustomersInfo() {\n    const classes = useStyles()\n\n    return (\n\n        <Card className={classes.root}>\n            <CardHeader\n                title={\n                    <Typography className={classes.title}>اطلاعات مشتری</Typography>\n                }\n            />\n\n            <TableContainer className={classes.details} component={\"div\"}>\n                <Table className={classes.table} aria-label=\"information\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                details.map((title) => (\n                                    <StyledTableCell align = \"right\" >{title}</StyledTableCell>\n                                ))\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            {\n                                customer.map((detail, index) => (\n                                    index !== 5 ?\n                                    <StyledTableCell align = \"right\" >{detail}</StyledTableCell>\n                                    : null\n                                ))\n                            }\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <div className={classes.address}>\n                <Typography className={classes.textStyle}  style={{marginTop : 24, marginBottom : 8}}>آدرس</Typography>\n                <Typography className={classes.textStyle} style={{color : '#50525C', fontSize : 16, opacity  : '100%',marginBottom : 24  }}>\n                    {customer[5]}</Typography>\n            </div>\n        </Card>\n    )\n\n\n}\n\n\nexport default CustomersInfo","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Orders/OrderState.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/AmazingStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/BannersStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Campaign/Styles/DiscountTableStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Auth.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useAllCommentsData.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Public/DeleteDialog.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useDeleteComment.js",["374"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../../utills/Hooks/useAxios\";\n\nfunction useDeleteComment(fetch, id) {\n    const [result, setResult] = useState()\n    const [loading, setLoading] = useState(false)\n    const [, deleteComment] = useAxios({\n        url: '/admin/comment_mng/delete_comment',\n        method: 'DELETE',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await deleteComment({\n                    data: {\n                        \"id\": id,\n                    }\n                })\n                setResult(response.data.status === 'success')\n            } catch (err) {\n                setResult(false)\n            }\n            setLoading(false)\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useDeleteComment","/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useCategoriesData.js",["375"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"./useAxios\";\n\n\nfunction useCategoriesData(fetch) {\n    const [result, setResult] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [, getCategories] = useAxios({\n        url: '/get_all_category',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await getCategories()\n                setResult(response.data.data.categories)\n                setLoading(false)\n            } catch (err) {\n                setLoading(false)\n            }\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useCategoriesData","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Actions/useChangeCommentStatus.js",["376","377"],"import {useEffect, useState} from \"react\";\nimport {useAxios} from \"../../../utills/Hooks/useAxios\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction useChangeCommentStatus(fetch, id, status) {\n    const history = useHistory()\n    const [result, setResult] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [, changeStatus] = useAxios({\n        url: '/admin/comment_mng/update_comment_status',\n        method: 'PATCH',\n    }, {manual: true})\n\n    useEffect(() => {\n        async function getResult() {\n            try {\n                setLoading(true)\n                const response = await changeStatus({\n                    data: {\n                        \"id\": id,\n                        \"status\": status,\n                    }\n                })\n                setResult(response.data.data)\n            } catch (err) {\n                setResult(null)\n            }\n            setLoading(false)\n        }\n\n        if (fetch)\n            getResult().then()\n\n    }, [fetch])\n\n    return [loading, result]\n}\n\nexport default useChangeCommentStatus","/Users/tavallai/codes/JS/didartshop-dashboard/src/DashboardComponents/Comments/Styles/useCommentCardStyle.js",[],"/Users/tavallai/codes/JS/didartshop-dashboard/src/utills/Hooks/useLogin.js",[],{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","severity":1,"message":"383","line":24,"column":11,"nodeType":"384","messageId":"385","endLine":24,"endColumn":19},{"ruleId":"382","severity":1,"message":"386","line":32,"column":13,"nodeType":"384","messageId":"385","endLine":32,"endColumn":25},{"ruleId":"387","severity":1,"message":"388","line":43,"column":8,"nodeType":"389","endLine":43,"endColumn":10,"suggestions":"390"},{"ruleId":"382","severity":1,"message":"391","line":32,"column":11,"nodeType":"384","messageId":"385","endLine":32,"endColumn":17},{"ruleId":"382","severity":1,"message":"392","line":92,"column":22,"nodeType":"384","messageId":"385","endLine":92,"endColumn":33},{"ruleId":"382","severity":1,"message":"393","line":99,"column":22,"nodeType":"384","messageId":"385","endLine":99,"endColumn":33},{"ruleId":"382","severity":1,"message":"394","line":106,"column":22,"nodeType":"384","messageId":"385","endLine":106,"endColumn":35},{"ruleId":"382","severity":1,"message":"395","line":36,"column":10,"nodeType":"384","messageId":"385","endLine":36,"endColumn":20},{"ruleId":"382","severity":1,"message":"396","line":10,"column":9,"nodeType":"384","messageId":"385","endLine":10,"endColumn":19},{"ruleId":"382","severity":1,"message":"397","line":10,"column":21,"nodeType":"384","messageId":"385","endLine":10,"endColumn":28},{"ruleId":"382","severity":1,"message":"398","line":13,"column":8,"nodeType":"384","messageId":"385","endLine":13,"endColumn":30},{"ruleId":"382","severity":1,"message":"399","line":79,"column":11,"nodeType":"384","messageId":"385","endLine":79,"endColumn":22},{"ruleId":"382","severity":1,"message":"395","line":92,"column":14,"nodeType":"384","messageId":"385","endLine":92,"endColumn":24},{"ruleId":"382","severity":1,"message":"400","line":114,"column":11,"nodeType":"384","messageId":"385","endLine":114,"endColumn":19},{"ruleId":"382","severity":1,"message":"401","line":118,"column":11,"nodeType":"384","messageId":"385","endLine":118,"endColumn":28},{"ruleId":"382","severity":1,"message":"402","line":225,"column":23,"nodeType":"384","messageId":"385","endLine":225,"endColumn":26},{"ruleId":"382","severity":1,"message":"403","line":116,"column":33,"nodeType":"384","messageId":"385","endLine":116,"endColumn":38},{"ruleId":"382","severity":1,"message":"404","line":8,"column":7,"nodeType":"384","messageId":"385","endLine":8,"endColumn":18},{"ruleId":"405","severity":1,"message":"406","line":79,"column":59,"nodeType":"407","messageId":"408","endLine":79,"endColumn":61},{"ruleId":"405","severity":1,"message":"406","line":43,"column":49,"nodeType":"407","messageId":"408","endLine":43,"endColumn":51},{"ruleId":"387","severity":1,"message":"409","line":53,"column":8,"nodeType":"389","endLine":53,"endColumn":29,"suggestions":"410"},{"ruleId":"405","severity":1,"message":"406","line":197,"column":50,"nodeType":"407","messageId":"408","endLine":197,"endColumn":52},{"ruleId":"405","severity":1,"message":"406","line":205,"column":50,"nodeType":"407","messageId":"408","endLine":205,"endColumn":52},{"ruleId":"405","severity":1,"message":"406","line":215,"column":41,"nodeType":"407","messageId":"408","endLine":215,"endColumn":43},{"ruleId":"382","severity":1,"message":"411","line":15,"column":13,"nodeType":"384","messageId":"385","endLine":15,"endColumn":34},{"ruleId":"382","severity":1,"message":"412","line":212,"column":7,"nodeType":"384","messageId":"385","endLine":212,"endColumn":13},{"ruleId":"382","severity":1,"message":"396","line":5,"column":5,"nodeType":"384","messageId":"385","endLine":5,"endColumn":15},{"ruleId":"382","severity":1,"message":"397","line":6,"column":5,"nodeType":"384","messageId":"385","endLine":6,"endColumn":12},{"ruleId":"387","severity":1,"message":"413","line":31,"column":8,"nodeType":"389","endLine":31,"endColumn":15,"suggestions":"414"},{"ruleId":"387","severity":1,"message":"415","line":27,"column":8,"nodeType":"389","endLine":27,"endColumn":15,"suggestions":"416"},{"ruleId":"382","severity":1,"message":"417","line":6,"column":11,"nodeType":"384","messageId":"385","endLine":6,"endColumn":18},{"ruleId":"387","severity":1,"message":"418","line":34,"column":8,"nodeType":"389","endLine":34,"endColumn":15,"suggestions":"419"},"no-native-reassign",["420"],"no-negated-in-lhs",["421"],"no-unused-vars","'isNumber' is assigned a value but never used.","Identifier","unusedVar","'discountCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["422"],"'update' is assigned a value but never used.","'postLoading' is assigned a value but never used.","'pathLoading' is assigned a value but never used.","'deleteLoading' is assigned a value but never used.","'createData' is defined but never used.","'IconButton' is defined but never used.","'SvgIcon' is defined but never used.","'TablePaginationActions' is defined but never used.","'createState' is assigned a value but never used.","'numPages' is assigned a value but never used.","'handleChangePages' is assigned a value but never used.","'res' is assigned a value but never used.","'fetch' is assigned a value but never used.","'socialNames' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'setStockValues' and 'stockValues'. Either include them or remove the dependency array.",["423"],"'preview_imageFormData' is assigned a value but never used.","'setKey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'deleteComment' and 'id'. Either include them or remove the dependency array.",["424"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["425"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeStatus', 'id', and 'status'. Either include them or remove the dependency array.",["426"],"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},"Update the dependencies array to be: [fetch]",{"range":"437","text":"438"},"Update the dependencies array to be: [colorTags, setStockValues, sizeTags, stockValues]",{"range":"439","text":"440"},"Update the dependencies array to be: [deleteComment, fetch, id]",{"range":"441","text":"442"},"Update the dependencies array to be: [fetch, getCategories]",{"range":"443","text":"444"},"Update the dependencies array to be: [changeStatus, fetch, id, status]",{"range":"445","text":"446"},[1526,1528],"[fetch]",[1705,1726],"[colorTags, setStockValues, sizeTags, stockValues]",[878,885],"[deleteComment, fetch, id]",[712,719],"[fetch, getCategories]",[1003,1010],"[changeStatus, fetch, id, status]"]